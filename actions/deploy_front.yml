# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when there is a push to the "main" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#


name: Deploy to Amazon ECR
on:
  push:
    branches:
      - "main"

env:
  AWS_REGION: eu-west-2        # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: app          # set this to your Amazon ECR repository name

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # set this to your AWS ACCESS KEY ID
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # set this to your AWS SECRET ACCESS KEY
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: "front_task"
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        cd ./front && docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
          task-definition: my-first-task.json
          container-name: "front-task"
          image: ${{ steps.build-image.outputs.image }}
    - name: Deploy to ecs
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: "my-first-service"
          cluster: "app-cluster"
          wait-for-service-stability: true       